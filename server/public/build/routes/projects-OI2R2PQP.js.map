{
  "version": 3,
  "sources": ["../../../app/routes/projects.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/projects.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/projects.tsx\");\n  import.meta.hot.lastModified = \"1714712655718.9944\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\nimport { getProjectListItems } from \"~/models/project.server\";\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nexport const loader = async ({\n  request\n}) => {\n  const userId = await requireUserId(request);\n  const projectListItems = await getProjectListItems({\n    userId\n  });\n  return json({\n    projectListItems\n  });\n};\nexport default function ProjectsPage() {\n  _s();\n  const data = useLoaderData();\n  const user = useUser();\n  console.log(\"data\", data);\n  console.log(\"user\", user);\n  return <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex items-center justify-between bg-slate-800 p-4 text-white\">\n        <h1 className=\"text-3xl font-bold\">\n          <Link to=\".\">Projects</Link>\n        </h1>\n        <p>{user.email}</p>\n        <Form action=\"/logout\" method=\"post\">\n          <button type=\"submit\" className=\"rounded bg-slate-600 px-4 py-2 text-blue-100 hover:bg-blue-500 active:bg-blue-600\">\n            Logout\n          </button>\n        </Form>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full w-80 border-r bg-gray-50\">\n          <Link to=\"new\" className=\"block p-4 text-xl text-blue-500\">\n            + New Project\n          </Link>\n\n          <hr />\n\n          {data.projectListItems.length === 0 ? <p className=\"p-4\">No notes yet</p> : <ol>\n              {data.projectListItems.map(project => <li key={project.id}>\n                  <NavLink className={({\n              isActive\n            }) => `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`} to={project.id}>\n                    \uD83D\uDCDD {project.title}\n                  </NavLink>\n                </li>)}\n            </ol>}\n        </div>\n\n        <div className=\"flex-1 p-6\">\n          <Layout>\n            <Outlet />\n          </Layout>\n        </div>\n      </main>\n    </div>;\n}\n_s(ProjectsPage, \"zuwG4n4VrRPUNhOscno+iP1Hrjw=\", false, function () {\n  return [useLoaderData, useUser];\n});\n_c = ProjectsPage;\nfunction Layout({\n  children\n}) {\n  return <>\n      <main>{children}</main>\n    </>;\n}\n_c2 = Layout;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProjectsPage\");\n$RefreshReg$(_c2, \"Layout\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
